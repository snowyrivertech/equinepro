import React from 'react';
import { Link } from "react-router-dom";
import { createPageUrl } from "@/utils";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Heart, Eye, DollarSign, Calendar } from "lucide-react";

export default function HorseCards({ horses, userRole }) {
  const getStatusColor = (status) => {
    const colors = {
      'Active': 'bg-green-100 text-green-800',
      'In Training': 'bg-blue-100 text-blue-800',
      'For Sale': 'bg-yellow-100 text-yellow-800',
      'Injured': 'bg-red-100 text-red-800',
      'Retired': 'bg-gray-100 text-gray-800'
    };
    return colors[status] || 'bg-gray-100 text-gray-800';
  };

  if (horses.length === 0) {
    return (
      <Card className="bg-white/70 backdrop-blur-sm border-amber-200">
        <CardContent className="text-center py-12">
          <Heart className="w-16 h-16 text-amber-400 mx-auto mb-4" />
          <h3 className="text-xl font-semibold text-gray-900 mb-2">
            {userRole === 'Buyer' ? 'No Horses for Sale' : 'No Horses Yet'}
          </h3>
          <p className="text-amber-700 mb-6">
            {userRole === 'Buyer' 
              ? 'Check back later for available horses' 
              : 'Start by adding your first horse to the system'}
          </p>
          {userRole !== 'Buyer' && (
            <Link to={createPageUrl("AddHorse")}>
              <Button className="bg-gradient-to-r from-amber-600 to-orange-600 hover:from-amber-700 hover:to-orange-700">
                Add First Horse
              </Button>
            </Link>
          )}
        </CardContent>
      </Card>
    );
  }

  return (
    <Card className="bg-white/70 backdrop-blur-sm border-amber-200">
      <CardHeader>
        <CardTitle className="flex items-center gap-2 text-xl">
          <Heart className="w-6 h-6 text-amber-600" />
          {userRole === 'Buyer' ? 'Available Horses' : 'Your Horses'}
        </CardTitle>
      </CardHeader>
      <CardContent>
        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-4">
          {horses.slice(0, 6).map((horse) => (
            <div key={horse.id} className="bg-white rounded-xl border border-amber-100 p-4 hover:shadow-lg transition-all duration-300 group">
              <div className="aspect-square bg-gradient-to-br from-amber-100 to-orange-100 rounded-lg mb-4 flex items-center justify-center overflow-hidden">
                {horse.photo_url ? (
                  <img 
                    src={horse.photo_url} 
                    alt={horse.name}
                    className="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                  />
                ) : (
                  <Heart className="w-12 h-12 text-amber-500" />
                )}
              </div>
              
              <div className="space-y-2">
                <div className="flex items-center justify-between">
                  <h4 className="font-semibold text-gray-900">{horse.name}</h4>
                  <Badge className={getStatusColor(horse.status)}>
                    {horse.status}
                  </Badge>
                </div>
                
                <p className="text-sm text-amber-700">
                  {horse.breed} â€¢ {horse.age} years
                </p>
                
                {horse.discipline && (
                  <p className="text-xs text-gray-600">
                    {horse.discipline}
                  </p>
                )}
                
                {horse.for_sale && horse.sale_price && (
                  <div className="flex items-center gap-1 text-green-600">
                    <DollarSign className="w-3 h-3" />
                    <span className="text-sm font-medium">
                      ${horse.sale_price.toLocaleString()}
                    </span>
                  </div>
                )}
                
                <Link to={createPageUrl(`HorseDetails?id=${horse.id}`)}>
                  <Button 
                    variant="outline" 
                    size="sm" 
                    className="w-full mt-3 border-amber-300 text-amber-700 hover:bg-amber-50"
                  >
                    <Eye className="w-4 h-4 mr-2" />
                    View Details
                  </Button>
                </Link>
              </div>
            </div>
          ))}
        </div>
        
        {horses.length > 6 && (
          <div className="text-center mt-6">
            <Link to={createPageUrl("Horses")}>
              <Button variant="outline" className="border-amber-300 text-amber-700 hover:bg-amber-50">
                View All Horses ({horses.length})
              </Button>
            </Link>
          </div>
        )}
      </CardContent>
    </Card>
  );
}
