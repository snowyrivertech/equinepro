import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { 
  Stethoscope, 
  DollarSign, 
  Users, 
  Calendar,
  AlertTriangle,
  TrendingUp
} from "lucide-react";

export default function RoleBasedContent({ user, horses, trainingLogs }) {
  const renderOwnerContent = () => (
    <Card className="bg-white/70 backdrop-blur-sm border-amber-200">
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Users className="w-5 h-5 text-amber-600" />
          Owner Overview
        </CardTitle>
      </CardHeader>
      <CardContent>
        <div className="grid md:grid-cols-2 gap-4">
          <div className="space-y-2">
            <h4 className="font-medium text-gray-900">Portfolio Value</h4>
            <p className="text-2xl font-bold text-green-600">
              ${horses.filter(h => h.sale_price).reduce((sum, h) => sum + h.sale_price, 0).toLocaleString()}
            </p>
          </div>
          <div className="space-y-2">
            <h4 className="font-medium text-gray-900">Horses for Sale</h4>
            <p className="text-2xl font-bold text-amber-600">
              {horses.filter(h => h.for_sale).length}
            </p>
          </div>
        </div>
      </CardContent>
    </Card>
  );

  const renderVetContent = () => (
    <Card className="bg-white/70 backdrop-blur-sm border-amber-200">
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Stethoscope className="w-5 h-5 text-amber-600" />
          Veterinary Overview
        </CardTitle>
      </CardHeader>
      <CardContent>
        <div className="space-y-4">
          <div className="flex items-center justify-between">
            <span className="text-gray-700">Horses Under Care</span>
            <span className="font-semibold">{horses.length}</span>
          </div>
          <div className="flex items-center justify-between">
            <span className="text-gray-700">Injured Horses</span>
            <Badge variant="destructive" className="bg-red-100 text-red-800">
              {horses.filter(h => h.status === 'Injured').length}
            </Badge>
          </div>
          <div className="flex items-center justify-between">
            <span className="text-gray-700">Needs Attention</span>
            <span className="font-semibold text-orange-600">
              {horses.filter(h => h.medical_notes && h.medical_notes.length > 0).length}
            </span>
          </div>
        </div>
      </CardContent>
    </Card>
  );

  const renderBuyerContent = () => (
    <Card className="bg-white/70 backdrop-blur-sm border-amber-200">
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <DollarSign className="w-5 h-5 text-amber-600" />
          Buyer Dashboard
        </CardTitle>
      </CardHeader>
      <CardContent>
        <div className="space-y-4">
          <div className="flex items-center justify-between">
            <span className="text-gray-700">Available Horses</span>
            <span className="font-semibold">{horses.filter(h => h.for_sale).length}</span>
          </div>
          <div className="flex items-center justify-between">
            <span className="text-gray-700">Average Price</span>
            <span className="font-semibold text-green-600">
              ${horses.filter(h => h.sale_price).length > 0 
                ? Math.round(horses.filter(h => h.sale_price).reduce((sum, h) => sum + h.sale_price, 0) / horses.filter(h => h.sale_price).length).toLocaleString()
                : '0'
              }
            </span>
          </div>
          <div className="flex items-center justify-between">
            <span className="text-gray-700">Price Range</span>
            <span className="font-semibold">
              ${Math.min(...horses.filter(h => h.sale_price).map(h => h.sale_price)).toLocaleString()} - 
              ${Math.max(...horses.filter(h => h.sale_price).map(h => h.sale_price)).toLocaleString()}
            </span>
          </div>
        </div>
      </CardContent>
    </Card>
  );

  const renderRiderContent = () => (
    <Card className="bg-white/70 backdrop-blur-sm border-amber-200">
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <TrendingUp className="w-5 h-5 text-amber-600" />
          Training Progress
        </CardTitle>
      </CardHeader>
      <CardContent>
        <div className="space-y-4">
          <div className="flex items-center justify-between">
            <span className="text-gray-700">Horses in Training</span>
            <span className="font-semibold">{horses.filter(h => h.status === 'In Training').length}</span>
          </div>
          <div className="flex items-center justify-between">
            <span className="text-gray-700">Recent Sessions</span>
            <span className="font-semibold">{trainingLogs.length}</span>
          </div>
          <div className="flex items-center justify-between">
            <span className="text-gray-700">Avg Session Rating</span>
            <span className="font-semibold text-amber-600">
              {trainingLogs.length > 0 
                ? (trainingLogs.reduce((sum, log) => sum + (log.rating || 0), 0) / trainingLogs.length).toFixed(1)
                : '0.0'
              } ‚≠ê
            </span>
          </div>
        </div>
      </CardContent>
    </Card>
  );

  switch (user?.role) {
    case 'Owner':
      return renderOwnerContent();
    case 'Vet':
      return renderVetContent();
    case 'Buyer':
      return renderBuyerContent();
    case 'Rider':
      return renderRiderContent();
    default:
      return renderRiderContent();
  }
}
